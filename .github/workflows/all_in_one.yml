name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout NordvikManager FrontEnd repository
        uses: actions/checkout@v4
        with:
          repository: haffff/NordvikManagerFrontend
          path: frontend
      - name: Checkout NordvikManager Configuration
        uses: actions/checkout@v4
        with:
          path: config
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: get env file
        run: |
          mv config/releaseconfig/all_in_one/client/.env .env
      - name: Install dependencies
        run: |
          cd frontend
          npm ci --legacy-peer-deps
          npm run buildci --if-present
          cd ..
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: front-build
          path: frontend/build
  build_backend:
      runs-on: ubuntu-latest
      needs: [build_frontend]
      steps:
      - name: Checkout NordvikManager Backend repository
        uses: actions/checkout@v4
        with: 
          repository: haffff/NordvikManager-Backend
          path: backend
      - name: Checkout NordvikManager Configuration
        uses: actions/checkout@v4
        with:
          path: config
      - name: Install Frontend
        uses: actions/download-artifact@v4
        with:
          name: front-build
          path: backend/DNDOnePlaceManager/wwwroot
      - name: Install dependencies
        run: dotnet restore backend/DNDOnePlaceManager.sln
      - name: Build Windows
        run: dotnet publish backend/DNDOnePlaceManager.sln -c Release -o ./build_win64 -r win-x64 --self-contained
      - name: Build Linux
        run: dotnet publish backend/DNDOnePlaceManager.sln -c Release -o ./build_linux -r linux --self-contained
      - name: Move config files
        run: |
          cp -r config/releaseconfig/all_in_one/server/* ./build_win64/
          rm ./build_win64/appsettings.Development.json
          cp -r config/releaseconfig/all_in_one/server/* ./build_linux/
          rm ./build_linux/appsettings.Development.json
      - name: Upload artifacts Windows
        uses: actions/upload-artifact@v4
        with:
          name: win64-build
          path: ./build_win64
      - name: Upload artifacts Linux
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: ./build_linux
  release:
      runs-on: ubuntu-latest
      needs: [build_frontend, build_backend]
      steps:
        - name: Checkout NordvikManager Configuration
          uses: actions/checkout@v4
          with:
            path: config
        - name: Set release version number and latest changes
          run: |
              export CURRENT_VERSION=$(jq -r '.CurrentVersion' config/version.json)
              echo "Current Version: $CURRENT_VERSION"
              echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
              export LATEST_CHANGES=$(jq -r '.LatestChanges | join("\n - ")' config/version.json)
              echo "Latest Changes: $LATEST_CHANGES"
        - name: Download win64-build
          uses: actions/download-artifact@v4
          with:
            name: win64-build
            path: ./win64-build
        - name: Create Windows Zip file
          run: |
            cd win64-build
            zip -r ../NordvikManager_$CURRENT_VERSION_Windows.zip *
            cd ..
        
        - name: Download linux-build
          uses: actions/download-artifact@v4
          with:
            name: linux-build
            path: ./linux-build
        - name: Create Windows Zip file
          run: |
            cd linux-build
            zip -r ../NordvikManager_$CURRENT_VERSION_Linux.zip *
            cd ..
        - uses: marvinpinto/action-automatic-releases@latest
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            title: "Release $CURRENT_VERSION"
            files: |
              NordvikManager_$CURRENT_VERSION_Windows.zip
              NordvikManager_$CURRENT_VERSION_Linux.zip
